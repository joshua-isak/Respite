Idea for factoring vulkan into a subsytem of the engine -

instanced rendering


use a model loader,
index the models,



have lights with shadows which can be created as instances of an engine light class
these light classes must all be added to renderer class at the init of a stage
all static objects are shadow mapped
then to render everything realtime, run each of the shadow passes but only with the dynamic objects, combine with the static previously rendered image and then proceed to render the scene with lighting


bake models together, bake shadow passes etc at init, then run everything



Loader


Loader loader;


// game is setting up game
// file path
loader.load('tree');

loader.load(set of terrain data);




box -> generate vertices


*---*
 \
  \ 
   \
*   *



